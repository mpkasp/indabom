import os
import subprocess
import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'supersecretkey'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Sentry.io config
try:
    release = subprocess.check_output(["git", "describe"]).strip()
except:
    release = 'UNKNOWN'

if not DEBUG:
    sentry_sdk.init(
        dsn="yourdsn",
        integrations=[DjangoIntegration()],
        release=release,

        # Set traces_sample_rate to 1.0 to capture 100%
        # of transactions for performance monitoring.
        # We recommend adjusting this value in production,
        traces_sample_rate=1.0,

        # If you wish to associate users to errors (assuming you are using
        # django.contrib.auth) you may enable sending PII data.
        send_default_pii=True
    )

ALLOWED_HOSTS = ['*']

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

BOM_CONFIG = {
    'octopart_api_key': 'supersecretkey'
}

# google GoogleOAuth
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = 'secretkey'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'secretsecret'

EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"
SENDGRID_API_KEY = 'secretkey'

RECAPTCHA_PRIVATE_KEY = 'secret'
RECAPTCHA_PUBLIC_KEY = 'secret'

# Stripe
STRIPE_TEST_PUBLIC_KEY ='your_pk_test'
STRIPE_TEST_SECRET_KEY = 'your_secret_key'
STRIPE_LIVE_MODE = False  # Change to True in production
DJSTRIPE_WEBHOOK_SECRET = "whsec_xxx"
DJSTRIPE_FOREIGN_KEY_TO_FIELD = "id"